{"ast":null,"code":"var _jsxFileName = \"D:\\\\Website\\\\Note\\\\frontend\\\\src\\\\pages\\\\NoteListPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport ListNote from \"../components/ListNote\";\nimport AddButton from \"../components/AddButton\";\nimport Pagination from '../components/PageNumber';\nimport API from '../ultis/API';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TasksListPage = () => {\n  _s();\n\n  const [notes, setNotes] = useState([]);\n  const [page, setPage] = useState(1);\n  const [totalPage, setTotalPage] = useState(null);\n  const [noteCount, setNoteCount] = useState(null);\n  useEffect(() => {\n    getPageList();\n  }, [page]);\n\n  let handlePageChange = newPage => {\n    setPage(newPage);\n  };\n\n  let getPageList = async () => {\n    try {\n      let resp = await API.get(`notes/?page=${page}`);\n      setNotes(resp.data.results);\n      setTotalPage(resp.data.total_pages);\n      setNoteCount(resp.data.count);\n    } catch (error) {\n      console.log('PAGINATION ERROR>>>', error);\n    }\n  };\n\n  let searchNotes = async value => {\n    try {\n      let resp = await API.get(`notes/?search=${value}`);\n    } catch (error) {}\n  };\n\n  let handleInputchange = e => {\n    e.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notes\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notes-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"notes-title\",\n        children: \"\\u2636 NOTES\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"notes-count\",\n        children: noteCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notes-list\",\n      children: notes.map(note => /*#__PURE__*/_jsxDEV(ListNote, {\n        note: note\n      }, note.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      totalPage: totalPage,\n      page: page,\n      handlePageChange: handlePageChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TasksListPage, \"8RbW0GBqPf6uuODMtggGbB0gdP0=\");\n\n_c = TasksListPage;\nexport default TasksListPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"TasksListPage\");","map":{"version":3,"names":["React","useState","useEffect","ListNote","AddButton","Pagination","API","TasksListPage","notes","setNotes","page","setPage","totalPage","setTotalPage","noteCount","setNoteCount","getPageList","handlePageChange","newPage","resp","get","data","results","total_pages","count","error","console","log","searchNotes","value","handleInputchange","e","preventDefault","map","note","id"],"sources":["D:/Website/Note/frontend/src/pages/NoteListPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport ListNote from \"../components/ListNote\";\r\nimport AddButton from \"../components/AddButton\";\r\n\r\nimport Pagination from '../components/PageNumber'\r\nimport API from '../ultis/API'\r\n\r\n\r\nconst TasksListPage = () => {\r\n  const [notes, setNotes] = useState([]);\r\n  const [page, setPage] = useState(1)\r\n  const [totalPage, setTotalPage]= useState(null)\r\n  const [noteCount, setNoteCount] = useState(null)\r\n\r\n\r\n  useEffect(() => {\r\n    getPageList();\r\n  }, [page]);\r\n\r\n  \r\n  let handlePageChange = (newPage)=>{\r\n    setPage(newPage)\r\n  }\r\n  \r\n  let getPageList = async () => {\r\n    try{\r\n        let resp = await API.get(`notes/?page=${page}`);\r\n        setNotes(resp.data.results)\r\n        setTotalPage(resp.data.total_pages)\r\n        setNoteCount(resp.data.count)\r\n    }catch(error){\r\n        console.log('PAGINATION ERROR>>>', error)\r\n    }  \r\n  };\r\n\r\n  let searchNotes = async(value)=>{\r\n    try{\r\n      let resp = await API.get(`notes/?search=${value}`)\r\n    }catch(error){\r\n\r\n    }\r\n  }\r\n\r\n  let handleInputchange = (e)=>{\r\n    e.preventDefault()\r\n\r\n  }\r\n\r\n  return (\r\n    <div className=\"notes\">\r\n      <div className=\"notes-header\">\r\n        <h2 className=\"notes-title\">&#9782; NOTES</h2>\r\n        <p className=\"notes-count\">{noteCount}</p>\r\n      </div>\r\n      <div>\r\n        <input type=\"text\" placeholder=\"Search\"/>\r\n      </div>\r\n      <div className=\"notes-list\">\r\n        {notes.map((note) => (\r\n          <ListNote key={note.id} note={note} />\r\n        ))}\r\n      </div>\r\n\r\n      <Pagination\r\n        totalPage={totalPage}\r\n        page={page}\r\n        handlePageChange={handlePageChange}\r\n      />\r\n      <AddButton />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TasksListPage;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AAEA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,GAAP,MAAgB,cAAhB;;;AAGA,MAAMC,aAAa,GAAG,MAAM;EAAA;;EAC1B,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,CAAD,CAAhC;EACA,MAAM,CAACW,SAAD,EAAYC,YAAZ,IAA2BZ,QAAQ,CAAC,IAAD,CAAzC;EACA,MAAM,CAACa,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,IAAD,CAA1C;EAGAC,SAAS,CAAC,MAAM;IACdc,WAAW;EACZ,CAFQ,EAEN,CAACN,IAAD,CAFM,CAAT;;EAKA,IAAIO,gBAAgB,GAAIC,OAAD,IAAW;IAChCP,OAAO,CAACO,OAAD,CAAP;EACD,CAFD;;EAIA,IAAIF,WAAW,GAAG,YAAY;IAC5B,IAAG;MACC,IAAIG,IAAI,GAAG,MAAMb,GAAG,CAACc,GAAJ,CAAS,eAAcV,IAAK,EAA5B,CAAjB;MACAD,QAAQ,CAACU,IAAI,CAACE,IAAL,CAAUC,OAAX,CAAR;MACAT,YAAY,CAACM,IAAI,CAACE,IAAL,CAAUE,WAAX,CAAZ;MACAR,YAAY,CAACI,IAAI,CAACE,IAAL,CAAUG,KAAX,CAAZ;IACH,CALD,CAKC,OAAMC,KAAN,EAAY;MACTC,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,KAAnC;IACH;EACF,CATD;;EAWA,IAAIG,WAAW,GAAG,MAAMC,KAAN,IAAc;IAC9B,IAAG;MACD,IAAIV,IAAI,GAAG,MAAMb,GAAG,CAACc,GAAJ,CAAS,iBAAgBS,KAAM,EAA/B,CAAjB;IACD,CAFD,CAEC,OAAMJ,KAAN,EAAY,CAEZ;EACF,CAND;;EAQA,IAAIK,iBAAiB,GAAIC,CAAD,IAAK;IAC3BA,CAAC,CAACC,cAAF;EAED,CAHD;;EAKA,oBACE;IAAK,SAAS,EAAC,OAAf;IAAA,wBACE;MAAK,SAAS,EAAC,cAAf;MAAA,wBACE;QAAI,SAAS,EAAC,aAAd;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAG,SAAS,EAAC,aAAb;QAAA,UAA4BlB;MAA5B;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAKE;MAAA,uBACE;QAAO,IAAI,EAAC,MAAZ;QAAmB,WAAW,EAAC;MAA/B;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QALF,eAQE;MAAK,SAAS,EAAC,YAAf;MAAA,UACGN,KAAK,CAACyB,GAAN,CAAWC,IAAD,iBACT,QAAC,QAAD;QAAwB,IAAI,EAAEA;MAA9B,GAAeA,IAAI,CAACC,EAApB;QAAA;QAAA;QAAA;MAAA,QADD;IADH;MAAA;MAAA;MAAA;IAAA,QARF,eAcE,QAAC,UAAD;MACE,SAAS,EAAEvB,SADb;MAEE,IAAI,EAAEF,IAFR;MAGE,gBAAgB,EAAEO;IAHpB;MAAA;MAAA;MAAA;IAAA,QAdF,eAmBE,QAAC,SAAD;MAAA;MAAA;MAAA;IAAA,QAnBF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAuBD,CA/DD;;GAAMV,a;;KAAAA,a;AAiEN,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}