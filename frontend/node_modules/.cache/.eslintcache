[{"D:\\Website\\NoteApp\\frontend\\src\\index.js":"1","D:\\Website\\NoteApp\\frontend\\src\\App.js":"2","D:\\Website\\NoteApp\\frontend\\src\\components\\Header.js":"3","D:\\Website\\NoteApp\\frontend\\src\\pages\\NotePage.js":"4","D:\\Website\\NoteApp\\frontend\\src\\pages\\NoteListPage.js":"5","D:\\Website\\NoteApp\\frontend\\src\\pages\\RegisterPage.js":"6","D:\\Website\\NoteApp\\frontend\\src\\pages\\LoginPage.js":"7","D:\\Website\\NoteApp\\frontend\\src\\context\\AuthContext.js":"8","D:\\Website\\NoteApp\\frontend\\src\\ultis\\ProtectedRoute.js":"9","D:\\Website\\NoteApp\\frontend\\src\\ultis\\API.js":"10","D:\\Website\\NoteApp\\frontend\\src\\components\\AddButton.js":"11","D:\\Website\\NoteApp\\frontend\\src\\components\\ListNote.js":"12","D:\\Website\\NoteApp\\frontend\\src\\components\\PageNumber.js":"13"},{"size":256,"mtime":1664640061971,"results":"14","hashOfConfig":"15"},{"size":1064,"mtime":1664732575352,"results":"16","hashOfConfig":"15"},{"size":373,"mtime":1664725159659,"results":"17","hashOfConfig":"15"},{"size":2051,"mtime":1669381618538,"results":"18","hashOfConfig":"15"},{"size":2068,"mtime":1664798878850,"results":"19","hashOfConfig":"15"},{"size":1150,"mtime":1664768809556,"results":"20","hashOfConfig":"15"},{"size":1026,"mtime":1664798336079,"results":"21","hashOfConfig":"15"},{"size":2799,"mtime":1664767098259,"results":"22","hashOfConfig":"15"},{"size":318,"mtime":1664642387739,"results":"23","hashOfConfig":"15"},{"size":661,"mtime":1664644415821,"results":"24","hashOfConfig":"15"},{"size":296,"mtime":1664720223267,"results":"25","hashOfConfig":"15"},{"size":849,"mtime":1669305793509,"results":"26","hashOfConfig":"15"},{"size":678,"mtime":1664798080619,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"vcbj6b",{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"31"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"31"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"D:\\Website\\NoteApp\\frontend\\src\\index.js",[],[],[],"D:\\Website\\NoteApp\\frontend\\src\\App.js",[],[],"D:\\Website\\NoteApp\\frontend\\src\\components\\Header.js",[],[],"D:\\Website\\NoteApp\\frontend\\src\\pages\\NotePage.js",["71"],[],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport { ReactComponent as LeftArrow } from \"../assets/LeftArrow.svg\";\r\nimport AuthContext from '../context/AuthContext'\r\nimport API from '../ultis/API'\r\nimport '../styles/NotePage.css'\r\nconst NotePage = () => {\r\n  const { noteID } = useParams();\r\n  const [note, setNote] = useState(null);\r\n  const {user} = useContext(AuthContext)\r\n  const history = useNavigate();\r\n  useEffect(() => {\r\n    getNote();\r\n  }, []);\r\n\r\n  let getNote = async () => {\r\n    if (noteID === \"new\") return;\r\n    try{\r\n      let resp = await API.get(`note/${noteID}/`)\r\n      setNote(resp.data)\r\n    }catch(error){\r\n      console.log(error)\r\n    }\r\n  };\r\n\r\n  const updateNote = async () => {\r\n    await API.put(`note/${noteID}/`,{\r\n      user:note.user,\r\n      body:note.body\r\n    })\r\n  };\r\n\r\n  const deleteNote = async () => {\r\n    await API.delete(`note/${noteID}/`)\r\n\r\n  };\r\n\r\n  const createNote = async ()=>{\r\n    await API.post(`notes/`,{\r\n      user:user.user_id,\r\n      body:note.body\r\n    })\r\n  }\r\n  const handleSubmit = () => {\r\n    if (noteID !== \"new\" && note.body !== \"\") {\r\n      updateNote();\r\n    } else if (noteID !== \"new\" && note.body === \"\") {\r\n      deleteNote();\r\n    } else if (noteID === \"new\" && note !== null && note.body!=='') {\r\n      createNote();\r\n    }\r\n    history(`/`);\r\n  };\r\n\r\n  const handleChange = (value) => {\r\n    setNote((note) => ({ ...note, body: value }));\r\n    \r\n  };\r\n  return (\r\n    <div className=\"note\">\r\n      <div className=\"note-header\">\r\n        <h3>\r\n          <LeftArrow onClick={handleSubmit} />\r\n        </h3>\r\n        {/* {noteID !== \"new\" ? (\r\n          <button onClick={deleteTask}>Delete</button>\r\n        ) : (\r\n          <button onClick={handleSubmit}>Done</button>\r\n        )} */}\r\n      </div>\r\n      <textarea\r\n        onChange={(e) => {\r\n          handleChange(e.target.value);\r\n        }}\r\n        value={note?.body}\r\n      ></textarea>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotePage;","D:\\Website\\NoteApp\\frontend\\src\\pages\\NoteListPage.js",["72"],[],"import React, { useState, useEffect } from \"react\";\r\nimport ListNote from \"../components/ListNote\";\r\nimport AddButton from \"../components/AddButton\";\r\nimport '../styles/NoteListPage.css'\r\nimport Pagination from '../components/PageNumber'\r\nimport API from '../ultis/API'\r\n\r\n\r\nconst TasksListPage = () => {\r\n  const [notes, setNotes] = useState([]);\r\n  const [page, setPage] = useState(1)\r\n  const [totalPage, setTotalPage]= useState(null)\r\n  const [noteCount, setNoteCount] = useState(null)\r\n\r\n\r\n  useEffect(() => {\r\n    getPageList();\r\n  }, [page]);\r\n\r\n  \r\n  let handlePageChange = (newPage)=>{\r\n    setPage(newPage)\r\n  }\r\n  \r\n  let getPageList = async () => {\r\n    try{\r\n        let resp = await API.get(`notes/?page=${page}`);\r\n        setNotes(resp.data.results)\r\n        setTotalPage(resp.data.total_pages)\r\n        setNoteCount(resp.data.count)\r\n    }catch(error){\r\n        console.log('PAGINATION ERROR>>>', error)\r\n    }  \r\n  };\r\n\r\n  let searchNotes = async(value)=>{\r\n    try{\r\n      let resp = await API.get(`notes/?search=${value}`)\r\n      console.log('SEARCH RESPONSE', resp.data)\r\n      setNotes(resp.data.results)\r\n      setTotalPage(resp.data.total_pages)\r\n      setNoteCount(resp.data.count)\r\n    }catch(error){\r\n      console.log('SEARCH ERROR:',error)\r\n    }\r\n  }\r\n\r\n  let handleSearchInputchange = (e)=>{\r\n    e.preventDefault()\r\n    searchNotes(e.target.value)\r\n  }\r\n\r\n  return (\r\n    <div className=\"notes\">\r\n      <div className=\"notes-header\">\r\n        <h2 className=\"notes-title\">&#9782; NOTES</h2>\r\n        <p className=\"notes-count\">{noteCount}</p>\r\n      </div>\r\n      <div id=\"search-input\">\r\n        <input  type=\"text\" placeholder=\"Search\" onChange={handleSearchInputchange}/>\r\n      </div>\r\n      <div className=\"notes-list\">\r\n        {notes.map((note) => (\r\n          <ListNote key={note.id} note={note} />\r\n        ))}\r\n      </div>\r\n\r\n      <Pagination\r\n        totalPage={totalPage}\r\n        page={page}\r\n        handlePageChange={handlePageChange}\r\n      />\r\n      <AddButton />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TasksListPage;","D:\\Website\\NoteApp\\frontend\\src\\pages\\RegisterPage.js",[],[],"D:\\Website\\NoteApp\\frontend\\src\\pages\\LoginPage.js",[],[],"D:\\Website\\NoteApp\\frontend\\src\\context\\AuthContext.js",["73"],[],"import React, { createContext, useEffect, useState } from \"react\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport API from \"../ultis/API\";\r\n\r\nconst AuthContext = createContext();\r\nexport default AuthContext;\r\n\r\nexport const ContextProvider = ({ children }) => {\r\n  let localAuthToken = localStorage.getItem(\"authToken\")\r\n    ? JSON.parse(localStorage.getItem(\"authToken\"))\r\n    : null;\r\n  let localAuthUser = localStorage.getItem(\"authToken\")\r\n    ? jwt_decode(localStorage.getItem(\"authToken\"))\r\n    : null;\r\n  const [authToken, setAuthToken] = useState(() => localAuthToken);\r\n  const [user, setUser] = useState(() => localAuthUser);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  let navigate = useNavigate();\r\n  const loginUser = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      let response = await API.post(\"token/\", {\r\n        username: e.target.username.value,\r\n        password: e.target.password.value,\r\n      });\r\n\r\n      setAuthToken(response.data);\r\n      setUser(jwt_decode(response.data.access));\r\n      localStorage.setItem(\"authToken\", JSON.stringify(response.data));\r\n      navigate(\"/\");\r\n    } catch (err) {\r\n      console.log(err);\r\n      logoutUser();\r\n    }\r\n  };\r\n\r\n  const logoutUser = () => {\r\n    setUser(null);\r\n    setAuthToken(null);\r\n    localStorage.removeItem(\"authToken\");\r\n    navigate(\"/login\");\r\n  };\r\n\r\n  const updateToken = async () => {\r\n    try {\r\n      let response = await API.post(\"token/refresh/\", {\r\n        refresh: authToken.refresh,\r\n      });\r\n      localStorage.setItem(\"authToken\", JSON.stringify(response.data));\r\n      setAuthToken(response.data);\r\n      setUser(jwt_decode(response.data.access));\r\n    } catch (error) {}\r\n\r\n    if (loading) {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const registerUser = async (e)=>{\r\n    e.preventDefault()\r\n    try{\r\n      let resp = await API.post(`register/`,{\r\n        username:e.target.username.value,\r\n        email:e.target.email.value,\r\n        password:e.target.password.value\r\n      })\r\n      console.log(resp)\r\n      navigate('/login')\r\n    }catch(error){\r\n      console.log(error)\r\n      alert('Try again!!')\r\n    }\r\n  }\r\n  const contextData = {\r\n    user: user,\r\n    authToken: authToken,\r\n    loginUser: loginUser,\r\n    logoutUser: logoutUser,\r\n    registerUser:registerUser,\r\n  };\r\n  // eslint-disable-next-line\r\n  useEffect(() => {\r\n    if (loading) {\r\n      updateToken();\r\n    }\r\n\r\n    let interval = setInterval(() => {\r\n      if (authToken) {\r\n        updateToken();\r\n      }\r\n    }, 1000 * 60 * 4);\r\n    return () => clearInterval(interval);\r\n  }, [authToken, loading]);\r\n\r\n  return (\r\n    <AuthContext.Provider value={contextData}>\r\n      {loading ? <p>loading...</p> : children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n","D:\\Website\\NoteApp\\frontend\\src\\ultis\\ProtectedRoute.js",[],[],"D:\\Website\\NoteApp\\frontend\\src\\ultis\\API.js",[],[],"D:\\Website\\NoteApp\\frontend\\src\\components\\AddButton.js",[],[],"D:\\Website\\NoteApp\\frontend\\src\\components\\ListNote.js",[],[],"D:\\Website\\NoteApp\\frontend\\src\\components\\PageNumber.js",[],[],{"ruleId":"74","severity":1,"message":"75","line":14,"column":6,"nodeType":"76","endLine":14,"endColumn":8,"suggestions":"77"},{"ruleId":"74","severity":1,"message":"78","line":18,"column":6,"nodeType":"76","endLine":18,"endColumn":12,"suggestions":"79"},{"ruleId":"74","severity":1,"message":"80","line":95,"column":6,"nodeType":"76","endLine":95,"endColumn":26,"suggestions":"81"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getNote'. Either include it or remove the dependency array.","ArrayExpression",["82"],"React Hook useEffect has a missing dependency: 'getPageList'. Either include it or remove the dependency array.",["83"],"React Hook useEffect has a missing dependency: 'updateToken'. Either include it or remove the dependency array.",["84"],{"desc":"85","fix":"86"},{"desc":"87","fix":"88"},{"desc":"89","fix":"90"},"Update the dependencies array to be: [getNote]",{"range":"91","text":"92"},"Update the dependencies array to be: [getPageList, page]",{"range":"93","text":"94"},"Update the dependencies array to be: [authToken, loading, updateToken]",{"range":"95","text":"96"},[534,536],"[getNote]",[541,547],"[getPageList, page]",[2626,2646],"[authToken, loading, updateToken]"]